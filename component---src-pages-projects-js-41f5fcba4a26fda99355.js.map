{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Projects/Project/Project.js","webpack://gatsby-starter-default/./src/components/Projects/Projects.js","webpack://gatsby-starter-default/./src/components/Title/Title.js","webpack://gatsby-starter-default/./src/pages/projects.js"],"names":["description","title","tecnologias","url","className","href","target","rel","map","item","key","name","props","items","state","useContext","GlobalStateContext","useStaticQuery","projectsES","projectsEN","moreES","moreEN","currentLanguaje","language","currentTheme","selectedTheme","window","localStorage","getItem","projects","titleBtnMore","translates","text","Title","theme","project","index","order","Link","to","path","uri"],"mappings":"6LAqBA,EAnBgB,SAAC,GAA8C,IAA5CA,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,IAClD,OACE,uBAAKC,UAAU,aACb,sBAAIA,UAAU,aACZ,qBAAGC,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC/BN,IAIL,qBAAGG,UAAU,aAAaJ,GAC1B,uBAAKI,UAAU,cACZF,EAAYM,KAAI,SAAAC,GACf,OAAO,wBAAMC,IAAKD,EAAKE,MAAOF,EAAKE,Y,oBC6F7C,EAzDiB,SAAAC,GACf,MAAsBA,EAAdC,aAAR,MAAgB,EAAhB,EAEMC,GAAQC,gBAAWC,MACzB,GAAmDC,oBA7C1C,cA6CDC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,OAEpCC,EAAkBR,EAAMS,SACxBC,EAAeV,EAAMW,cAEH,oBAAXC,SACLC,aAAaC,QAAQ,YACvBN,EAAkBK,aAAaC,QAAQ,WAErCD,aAAaC,QAAQ,WACvBJ,EAAeG,aAAaC,QAAQ,WAGxC,IAAMC,EACgB,UAApBP,EAA8BJ,EAAWW,SAAWV,EAAWU,SAE3DC,EACgB,UAApBR,EACIF,EAAOW,WAAW,GAAGC,KACrBX,EAAOU,WAAW,GAAGC,KAE3B,OACE,2BAAS5B,UAAU,oBACjB,gBAAC6B,EAAA,EAAD,CACEhC,MAAM,YACNiC,MAAwB,SAAjBV,EAA0B,OAAS,UAE5C,uBAAKpB,UAAU,qBACZS,EAAQ,EACLgB,EAASrB,KAAI,SAAC2B,EAASC,GACrB,OAAIA,EAAQvB,EAER,gBAAC,EAAD,eAASH,IAAKyB,EAAQE,MAAOD,MAAOA,GAAWD,IAG5C,QAETN,EAASrB,KAAI,SAAC2B,EAASC,GACrB,OAAO,gBAAC,EAAD,eAAS1B,IAAKyB,EAAQE,MAAOD,MAAOA,GAAWD,OAG3DtB,EAAQ,GACP,uBAAKT,UAAU,aACb,gBAAC,EAAAkC,KAAD,CAAMC,GAAG,YAAYnC,UAAS,OAASoB,GACpCM,Q,gFCvFf,EATc,SAAC,GAAsB,IAApB7B,EAAmB,EAAnBA,MAAOiC,EAAY,EAAZA,MACtB,OACE,uBAAK9B,UAAU,iBACb,0BAAKH,GAAS,iBACd,uBAAKG,UAAS,aAAe8B,O,qFCQnC,UATqB,SAAAtB,GACnB,OACE,gBAAC,IAAD,CAAQ4B,KAAM5B,EAAM6B,KAClB,gBAAC,IAAD,CAAKxC,MAAM,+BACX,gBAAC,IAAD","file":"component---src-pages-projects-js-41f5fcba4a26fda99355.js","sourcesContent":["import React from 'react';\n\nconst Project = ({ description, title, tecnologias, url }) => {\n  return (\n    <div className=\"card-info\">\n      <h3 className=\"card-slug\">\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {title}\n        </a>\n      </h3>\n\n      <p className=\"card-desc\">{description}</p>\n      <div className=\"card-label\">\n        {tecnologias.map(item => {\n          return <span key={item.name}>{item.name}</span>;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","import './Projects.scss';\n\nimport React, { useContext } from 'react';\nimport Title from '../Title';\nimport Project from './Project';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\n\nimport { GlobalStateContext } from '../../context/GlobalContextProvider';\n\nconst query = graphql`\n  {\n    projectsES: strapi {\n      projects(locale: \"es-AR\") {\n        locale\n        order\n        tecnologias {\n          logo\n          name\n        }\n        title\n        url\n        description\n      }\n    }\n    projectsEN: strapi {\n      projects(locale: \"en\") {\n        locale\n        order\n        tecnologias {\n          logo\n          name\n        }\n        title\n        url\n        description\n      }\n    }\n    moreES: strapi {\n      translates(locale: \"es-AR\", where: { slug: \"viewMore\" }) {\n        text\n      }\n    }\n    moreEN: strapi {\n      translates(locale: \"en\", where: { slug: \"viewMore\" }) {\n        text\n      }\n    }\n  }\n`;\n\nconst Projects = props => {\n  const { items = 0 } = props;\n\n  const state = useContext(GlobalStateContext);\n  const { projectsES, projectsEN, moreES, moreEN } = useStaticQuery(query);\n\n  let currentLanguaje = state.language;\n  let currentTheme = state.selectedTheme;\n\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('locale'))\n      currentLanguaje = localStorage.getItem('locale');\n\n    if (localStorage.getItem('theme'))\n      currentTheme = localStorage.getItem('theme');\n  }\n\n  const projects =\n    currentLanguaje === 'es-AR' ? projectsES.projects : projectsEN.projects;\n\n  const titleBtnMore =\n    currentLanguaje === 'es-AR'\n      ? moreES.translates[0].text\n      : moreEN.translates[0].text;\n\n  return (\n    <section className=\"section projects\">\n      <Title\n        title=\"Portfolio\"\n        theme={currentTheme === 'dark' ? 'dark' : 'light'}\n      />\n      <div className=\"section-center-50\">\n        {items > 0\n          ? projects.map((project, index) => {\n              if (index < items) {\n                return (\n                  <Project key={project.order} index={index} {...project} />\n                );\n              }\n              return null;\n            })\n          : projects.map((project, index) => {\n              return <Project key={project.order} index={index} {...project} />;\n            })}\n\n        {items > 0 && (\n          <div className=\"btnCenter\">\n            <Link to=\"/projects\" className={`btn ${currentTheme}`}>\n              {titleBtnMore}\n            </Link>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\n\nconst Title = ({ title, theme }) => {\n  return (\n    <div className=\"section-title\">\n      <h2>{title || 'default title'}</h2>\n      <div className={`underline ${theme}`}></div>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport Layout from '../layouts/Layout/Layout';\nimport Projects from '../components/Projects';\nimport Seo from '../components/Seo';\n\nconst ProjectsPage = props => {\n  return (\n    <Layout path={props.uri}>\n      <Seo title=\"Leandro Arturi - Proyectos\" />\n      <Projects />\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n"],"sourceRoot":""}