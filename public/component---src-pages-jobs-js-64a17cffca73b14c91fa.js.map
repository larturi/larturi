{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Jobs/Job/Job.js","webpack://gatsby-starter-default/./src/components/Jobs/Jobs.js","webpack://gatsby-starter-default/./src/components/Title/Title.js","webpack://gatsby-starter-default/./src/pages/jobs.js"],"names":["props","job","index","puesto","organization","periodo","description","className","key","items","state","useContext","GlobalStateContext","useStaticQuery","jobsES","jobsEN","titleES","titleEN","moreES","moreEN","currentLanguaje","language","currentTheme","selectedTheme","window","localStorage","getItem","jobs","title","navs","text","titleBtnMore","translates","Title","theme","map","Link","to","path","uri"],"mappings":"sMAiBA,EAfY,SAAAA,GACV,IAAQC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MACLC,EAA+CF,EAA/CE,OAAQC,EAAuCH,EAAvCG,aAAcC,EAAyBJ,EAAzBI,QAASC,EAAgBL,EAAhBK,YACvC,OACE,uBAAKC,UAAU,YAAYC,IAAKN,GAC9B,sBAAIK,UAAU,aAAaJ,GAC3B,uBAAKI,UAAU,cACb,4BAAOH,IAET,qBAAGG,UAAU,YAAYF,GACzB,qBAAGE,UAAU,sBAAsBD,K,UC4GzC,EAtDa,SAAAN,GACX,MAAsBA,EAAdS,aAAR,MAAgB,EAAhB,EAEMC,GAAQC,gBAAWC,MACzB,GACEC,oBA9DO,cA6DDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,QAASC,EAA1C,EAA0CA,OAAQC,EAAlD,EAAkDA,OAG9CC,EAAkBV,EAAMW,SACxBC,EAAeZ,EAAMa,cAEH,oBAAXC,SACLC,aAAaC,QAAQ,YACvBN,EAAkBK,aAAaC,QAAQ,WAErCD,aAAaC,QAAQ,WACvBJ,EAAeG,aAAaC,QAAQ,WAGxC,IAAMC,EAA2B,UAApBP,EAA8BN,EAAOa,KAAOZ,EAAOY,KAC1DC,EACgB,UAApBR,EAA8BJ,EAAQa,KAAK,GAAGC,KAAOb,EAAQY,KAAK,GAAGC,KACjEC,EACgB,UAApBX,EACIF,EAAOc,WAAW,GAAGF,KACrBX,EAAOa,WAAW,GAAGF,KAE3B,OACE,2BAASvB,UAAU,gBACjB,gBAAC0B,EAAA,EAAD,CAAOL,MAAOA,EAAOM,MAAwB,SAAjBZ,EAA0B,OAAS,UAE/D,uBAAKf,UAAU,qBACZE,EAAQ,EACLkB,EAAKQ,KAAI,SAAClC,EAAKC,GACb,OAAIA,EAAQO,EACH,gBAAC,EAAD,CAAKR,IAAKA,EAAKC,MAAOA,EAAOM,IAAKN,IAEpC,QAETyB,EAAKQ,KAAI,SAAClC,EAAKC,GACb,OAAO,gBAAC,EAAD,CAAKD,IAAKA,EAAKC,MAAOA,EAAOM,IAAKN,OAG9CO,EAAQ,GACP,uBAAKF,UAAU,aACb,gBAAC,EAAA6B,KAAD,CAAMC,GAAG,QAAQ9B,UAAS,OAASe,GAChCS,Q,gFCpGf,EATc,SAAC,GAAsB,IAApBH,EAAmB,EAAnBA,MAAOM,EAAY,EAAZA,MACtB,OACE,uBAAK3B,UAAU,iBACb,0BAAKqB,GAAS,iBACd,uBAAKrB,UAAS,aAAe2B,O,oFCQnC,UATiB,SAAAlC,GACf,OACE,gBAAC,IAAD,CAAQsC,KAAMtC,EAAMuC,KAClB,gBAAC,IAAD,CAAKX,MAAM,6BACX,gBAAC,IAAD","file":"component---src-pages-jobs-js-64a17cffca73b14c91fa.js","sourcesContent":["import React from 'react';\n\nconst Job = props => {\n  const { job, index } = props;\n  const { puesto, organization, periodo, description } = job;\n  return (\n    <div className=\"card-info\" key={index}>\n      <h3 className=\"card-slug\">{puesto}</h3>\n      <div className=\"card-label\">\n        <span>{organization}</span>\n      </div>\n      <p className=\"job-date\">{periodo}</p>\n      <p className=\"card-desc job-desc\">{description}</p>\n    </div>\n  );\n};\n\nexport default Job;\n","import './Jobs.scss';\n\nimport React, { useContext } from 'react';\nimport Title from '../Title';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\nimport Job from './Job';\n\nimport { GlobalStateContext } from '../../context/GlobalContextProvider';\n\nconst query = graphql`\n  {\n    jobsES: strapi {\n      jobs(locale: \"es-AR\", sort: \"order:desc\") {\n        description\n        fechaDesde\n        fechaHasta\n        locale\n        order\n        organization\n        periodo\n        puesto\n        tecnologias {\n          logo\n          name\n        }\n      }\n    }\n    jobsEN: strapi {\n      jobs(locale: \"en\", sort: \"order:desc\") {\n        description\n        fechaDesde\n        fechaHasta\n        locale\n        order\n        organization\n        periodo\n        puesto\n        tecnologias {\n          logo\n          name\n        }\n      }\n    }\n    titleES: strapi {\n      navs(locale: \"es-AR\", where: { url: \"/jobs\" }) {\n        text\n      }\n    }\n    titleEN: strapi {\n      navs(locale: \"en\", where: { url: \"/jobs\" }) {\n        text\n      }\n    }\n    moreES: strapi {\n      translates(locale: \"es-AR\", where: { slug: \"viewMore\" }) {\n        text\n      }\n    }\n    moreEN: strapi {\n      translates(locale: \"en\", where: { slug: \"viewMore\" }) {\n        text\n      }\n    }\n  }\n`;\n\nconst Jobs = props => {\n  const { items = 0 } = props;\n\n  const state = useContext(GlobalStateContext);\n  const { jobsES, jobsEN, titleES, titleEN, moreES, moreEN } =\n    useStaticQuery(query);\n\n  let currentLanguaje = state.language;\n  let currentTheme = state.selectedTheme;\n\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('locale'))\n      currentLanguaje = localStorage.getItem('locale');\n\n    if (localStorage.getItem('theme'))\n      currentTheme = localStorage.getItem('theme');\n  }\n\n  const jobs = currentLanguaje === 'es-AR' ? jobsES.jobs : jobsEN.jobs;\n  const title =\n    currentLanguaje === 'es-AR' ? titleES.navs[0].text : titleEN.navs[0].text;\n  const titleBtnMore =\n    currentLanguaje === 'es-AR'\n      ? moreES.translates[0].text\n      : moreEN.translates[0].text;\n\n  return (\n    <section className=\"section jobs\">\n      <Title title={title} theme={currentTheme === 'dark' ? 'dark' : 'light'} />\n\n      <div className=\"section-center-50\">\n        {items > 0\n          ? jobs.map((job, index) => {\n              if (index < items) {\n                return <Job job={job} index={index} key={index} />;\n              }\n              return null;\n            })\n          : jobs.map((job, index) => {\n              return <Job job={job} index={index} key={index} />;\n            })}\n\n        {items > 0 && (\n          <div className=\"btnCenter\">\n            <Link to=\"/jobs\" className={`btn ${currentTheme}`}>\n              {titleBtnMore}\n            </Link>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Jobs;\n","import React from 'react';\n\nconst Title = ({ title, theme }) => {\n  return (\n    <div className=\"section-title\">\n      <h2>{title || 'default title'}</h2>\n      <div className={`underline ${theme}`}></div>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport Layout from '../layouts/Layout/Layout';\nimport Jobs from '../components/Jobs';\nimport Seo from '../components/Seo';\n\nconst JobsPage = props => {\n  return (\n    <Layout path={props.uri}>\n      <Seo title=\"Leandro Arturi - Carrera\" />\n      <Jobs />\n    </Layout>\n  );\n};\n\nexport default JobsPage;\n"],"sourceRoot":""}